<project default="run">
	<!--
	 1. Where to get bundles  = bundles.folder
	 2. standalone jar Version to use = maven.version
	 3. Where to put output = output.folder
	-->

	<property name="target.folder" value="./target" />
	<property name="bundles.folder" value="${target.folder}/dependencies-mvn/plugins/" />
	<property name="maven.version" value="2.4.2-SNAPSHOT" />
	<property name="output.folder" value="${target.folder}/" />

	<property name="binJarTemp" value="${target.folder}/binJarTemp" />
	<property name="sourceJarTemp" value="${target.folder}/sourceJarTemp" />
	<property name="javadocJarTemp" value="${target.folder}/javadocJarTemp" />

	<target name="run" depends="clean,createUberjar,createSourcesUberjar,createFakeJavadoc">
		<echo>Using version: ${maven.version}</echo>
		<echo>Working with: ${bundles.folder}</echo>
		<echo>Use precompiled Xtext/Xtend classes: ${local.build}</echo>
		<!--
		<loadfile property="modifiedPomXml" srcFile="pom-template.pom">
			<filterchain>
				<expandproperties />
			</filterchain>
		</loadfile>
		<echo file="${output.folder}/org.eclipse.xtend.standalone-${maven.version}.pom">${modifiedPomXml}</echo>
		<echo>Pom stored: ${output.folder}/org.eclipse.xtend.standalone-${maven.version}.pom</echo>
		<echo>Run deploy.artifacts target to deploy!</echo>-->
	</target>

	<!-- - - - - - - - - - - - - - - - - -
          target: clean
         - - - - - - - - - - - - - - - - - -->
	<target name="clean">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${binJarTemp}">
				<include name="**" />
			</fileset>
			<fileset dir="${sourceJarTemp}">
				<include name="**" />
			</fileset>
			<fileset dir="${javadocJarTemp}">
				<include name="**" />
			</fileset>
		</delete>
	</target>

	<!-- =================================
          target: createUberjar    Binary
         ================================= -->
	<target name="createUberjar">
		<!-- TP bundles -->
		<fileset dir="${bundles.folder}" id="binJars">
			<include name="*.jar" />
			<exclude name="*xtext*.jar" if="local.build" />
			<exclude name="*xtend*.jar" if="local.build" />
			<exclude name="*source_*" />
		</fileset>

		<unzip dest="${binJarTemp}">
			<fileset refid="binJars" />
		</unzip>

		<antcall target="copyLocalBin" />

		<antcall target="cleanUpContent">
			<param name="contentDir" value="${binJarTemp}" />
		</antcall>

		<!-- EMF logs error if this property is not found -->
		<echo file="${binJarTemp}/plugin.properties">_UI_DiagnosticRoot_diagnostic=_UI_DiagnosticRoot_diagnostic</echo>
		<!-- Jar uber jar
		<jar destfile="${output.folder}/org.eclipse.xtend.standalone-${maven.version}.jar" basedir="${binJarTemp}" />-->

	</target>

	<target name="copyLocalBin" if="local.build">
		<!-- collect xtext/xtend jar file names -->
		<fileset dir="${bundles.folder}" id="xtext-xtendJars">
			<include name="*xtext*.jar" />
			<include name="*xtend*.jar" if="local.build" />
			<exclude name="*source_*" />
		</fileset>
		<!-- Extract project name from jar file name -->
		<pathconvert property="project.bin.folders" refid="xtext-xtendJars" pathsep=" ">
			<mapper>
				<regexpmapper handledirsep="yes" from=".*/(.*)_(.*).jar" to="\1/bin/**/*" />
			</mapper>
		</pathconvert>
		<!-- Copy bin folders content -->
		<fileset id="binFolders" dir="../../plugins" includes="${project.bin.folders}" />
		<copy todir="${binJarTemp}">
			<fileset refid="binFolders" />
			<cutdirsmapper dirs="2" />
		</copy>
	</target>

	<!-- =================================
	          target: createSourcesUberjar     Sources
	         ================================= -->
	<target name="createSourcesUberjar">
		<!-- TP bundles -->
		<fileset dir="${bundles.folder}" id="sourceJars">
			<include name="*source_*.jar" />
		</fileset>

		<unzip dest="${sourceJarTemp}" overwrite="true">
			<fileset refid="sourceJars" />
		</unzip>

		<antcall target="cleanUpContent">
			<param name="contentDir" value="${sourceJarTemp}" />
		</antcall>

		<!-- Jar uber jar
		<jar destfile="${output.folder}/org.eclipse.xtend.standalone-${maven.version}-sources.jar" basedir="${sourceJarTemp}">
			<exclude name="META-INF/*" />
		</jar>
		-->
	</target>


	<target name="createFakeJavadoc">
		<!-- Readme -->
		<echo file="${javadocJarTemp}/readme.txt">No JavaDoc yet</echo>
		<!-- Jar readme file as javadoc jar
		<jar destfile="${output.folder}/org.eclipse.xtend.standalone-${maven.version}-javadoc.jar" basedir="${javadocJarTemp}" /> -->
	</target>


	<!-- clean up equinox stuff, ecore file and some other -->
	<target name="cleanUpContent">
		<delete failonerror="false" verbose="true">
			<fileset dir="${contentDir}">
				<include name="about*" />
				<include name=".*" />
				<include name="plugin.*" />
				<include name="*.png" />
				<!--<include name="**/*.ecore" />-->
				<include name="META-INF/**" />
				<include name="testdata/**" />
			</fileset>
		</delete>
		<delete dir="${contentDir}/about_files" />
	</target>

</project>